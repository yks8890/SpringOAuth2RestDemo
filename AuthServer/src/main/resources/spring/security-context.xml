<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<security:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="clientAuthenticationManager"
		entry-point-ref="oauthAuthenticationEntryPoint">
		<security:intercept-url pattern="/oauth/token"
			access="IS_AUTHENTICATED_FULLY" />
		<security:anonymous enabled="false" />
		<security:http-basic entry-point-ref="oauthAuthenticationEntryPoint" />
		<security:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />
		<security:access-denied-handler ref="oauthAccessDeniedHandler" />
	</security:http>
	
	<security:http pattern="/register/**">
		<security:intercept-url pattern="/register/client"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:form-login authentication-failure-url="/login?authentication_error=true"
			default-target-url="/index" login-page="/login" login-processing-url="/login.do" />
		<security:logout logout-success-url="/index"
			logout-url="/logout.do" />
		<security:anonymous />
	</security:http>

	<security:http access-denied-page="/login?authorization_error=true"
		disable-url-rewriting="true">
		<security:intercept-url pattern="/oauth/**"
			access="ROLE_USER"/>
		<security:intercept-url pattern="/**"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- <security:http-basic entry-point-ref="oauthAuthenticationEntryPoint" /> -->
		<security:form-login authentication-failure-url="/login?authentication_error=true"
			default-target-url="/index" login-page="/login" login-processing-url="/login.do" />
			
		<security:logout logout-success-url="/index"
			logout-url="/logout.do" />
		<security:anonymous />
		<security:remember-me data-source-ref="dataSource"
			user-service-ref="jdbcUserService" />
	</security:http>



	<security:authentication-manager id="clientAuthenticationManager">
		<security:authentication-provider
			user-service-ref="clientDetailsUserService" />
	</security:authentication-manager>

	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>

	<bean id="clientDetailsUserService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>

	<oauth2:authorization-server
		client-details-service-ref="clientDetails" token-services-ref="tokenServices">
		<oauth2:authorization-code />
		<oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password />
	</oauth2:authorization-server>

	<bean id="clientDetails"
		class="org.springframework.security.oauth2.provider.JdbcClientDetailsService">
		<constructor-arg name="dataSource" ref="dataSource"></constructor-arg>
	</bean>

	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	<bean id="oauthAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased"
		xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:password-encoder hash="md5" />
			<security:jdbc-user-service id="jdbcUserService"
				data-source-ref="dataSource" />
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.JdbcTokenStore">
		<constructor-arg name="dataSource" ref="dataSource"></constructor-arg>
	</bean>

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="accessTokenValiditySeconds" value="3600" />
		<property name="refreshTokenValiditySeconds" value="36000"/>
	</bean>

	<oauth2:expression-handler id="oauthExpressionHandler" />
	<oauth2:web-expression-handler id="oauthWebExpressionHandler" />
</beans>
