  drop table if exists person;
  drop table if exists authorities;
  drop table if exists group_members;
  drop table if exists group_authorities;
  drop table if exists groups;
  drop table if exists oauth_refresh_token;
  drop table if exists oauth_access_token;
  drop table if exists oauth_client_token;
  drop table if exists oauth_client_details;
  drop table if exists oauth_code;
  drop table if exists ClientDetails;
  drop table if exists users;

  CREATE TABLE IF NOT EXISTS PERSON(
  ID INTEGER NOT NULL PRIMARY KEY,
  FIRST_NAME VARCHAR(100),
  LAST_NAME VARCHAR(100),
  NUMBER INTEGER,
  BRITH_DATE DATE
  );

  CREATE TABLE IF NOT EXISTS  USERS(
	  USERNAME VARCHAR(50) NOT NULL PRIMARY KEY,
	  PASSWORD VARCHAR(50) NOT NULL,
	  ENABLED BOOLEAN NOT NULL);

  CREATE TABLE IF NOT EXISTS  AUTHORITIES (
	  USERNAME VARCHAR(50) NOT NULL,
	  AUTHORITY VARCHAR(50) NOT NULL,
	  CONSTRAINT FK_AUTHORITIES_USERS FOREIGN KEY(USERNAME) REFERENCES USERS(USERNAME),
	  UNIQUE INDEX IX_AUTH_USERNAME (USERNAME,AUTHORITY)
	  );

	  #
	create unique index ix_auth_username on authorities (username,authority);


	CREATE TABLE IF NOT EXISTS GROUPS (
	  ID BIGINT AUTO_INCREMENT  PRIMARY KEY,
	  GROUP_NAME VARCHAR(50) NOT NULL
	  );

	CREATE TABLE IF NOT EXISTS GROUP_AUTHORITIES (
	  GROUP_ID BIGINT NOT NULL,
	  AUTHORITY VARCHAR(50) NOT NULL,
	  CONSTRAINT FK_GROUP_AUTHORITIES_GROUP FOREIGN KEY(GROUP_ID) REFERENCES GROUPS(ID)
	  );

	CREATE TABLE IF NOT EXISTS GROUP_MEMBERS (
	  ID BIGINT AUTO_INCREMENT  PRIMARY KEY,
	  USERNAME VARCHAR(50) NOT NULL,
	  GROUP_ID BIGINT NOT NULL,
	  CONSTRAINT FK_GROUP_MEMBERS_GROUP FOREIGN KEY(GROUP_ID) REFERENCES GROUPS(ID)
	  );

	CREATE TABLE IF NOT EXISTS  PERSISTENT_LOGINS (
	  USERNAME VARCHAR(64) NOT NULL,
	  SERIES VARCHAR(64) PRIMARY KEY,
	  TOKEN VARCHAR(64) NOT NULL,
	  LAST_USED TIMESTAMP NOT NULL
	  );


	CREATE TABLE IF NOT EXISTS OAUTH_CLIENT_DETAILS (
	  CLIENT_ID VARCHAR(128) PRIMARY KEY,
	  RESOURCE_IDS VARCHAR(128),
	  CLIENT_SECRET VARCHAR(128),
	  SCOPE VARCHAR(128),
	  AUTHORIZED_GRANT_TYPES VARCHAR(128),
	  WEB_SERVER_REDIRECT_URI VARCHAR(128),
	  AUTHORITIES VARCHAR(128),
	  ACCESS_TOKEN_VALIDITY INTEGER,
	  REFRESH_TOKEN_VALIDITY INTEGER,
	  ADDITIONAL_INFORMATION VARCHAR(128)
	);

	CREATE TABLE IF NOT EXISTS OAUTH_CLIENT_TOKEN (
	  TOKEN_ID VARCHAR(255),
	  TOKEN LONGBLOB,
	  AUTHENTICATION_ID VARCHAR(255),
	  USER_NAME VARCHAR(255),
	  CLIENT_ID VARCHAR(255)
	);

	CREATE TABLE IF NOT EXISTS OAUTH_ACCESS_TOKEN (
	  TOKEN_ID VARCHAR(255),
	  TOKEN LONGBLOB,
	  AUTHENTICATION_ID VARCHAR(255),
	  USER_NAME VARCHAR(255),
	  CLIENT_ID VARCHAR(255),
	  AUTHENTICATION LONGBLOB,
	  REFRESH_TOKEN VARCHAR(255)
	);

	CREATE TABLE IF NOT EXISTS OAUTH_REFRESH_TOKEN (
	  TOKEN_ID VARCHAR(255),
	  TOKEN LONGBLOB,
	  AUTHENTICATION LONGBLOB
	);

	CREATE TABLE IF NOT EXISTS OAUTH_CODE (
	  CODE VARCHAR(255), AUTHENTICATION LONGBLOB
	);

	CREATE TABLE IF NOT EXISTS CLIENTDETAILS (
	  APPID VARCHAR(128) PRIMARY KEY,
	  RESOURCEIDS VARCHAR(128),
	  APPSECRET VARCHAR(128),
	  SCOPE VARCHAR(128),
	  GRANTTYPES VARCHAR(128),
	  REDIRECTURL VARCHAR(128),
	  AUTHORITIES VARCHAR(128),
	  ACCESS_TOKEN_VALIDITY INTEGER,
	  REFRESH_TOKEN_VALIDITY INTEGER,
	  ADDITIONALINFORMATION VARCHAR(255)
	);